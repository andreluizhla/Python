Python

Zen do Python --> import this

Prompt de Comando= python C:\Users\CASA\Documents\Estudos\Python\Tuplas\Desafio073.py

print ( ) --> mostra no terminal o que tiver nos ( )

Variáveis:
algo = tipo primitivo

Armazenando e mostrando valores que o usuário digita:
nome = input ( "Digite o seu nome: " )

print ( "É um prazer te conhecer, {}".format(nome))

Tipos primitivos:

"Algo" , '34' ,  ' ' = String ou str

7, -4, 0 = Inteiro ou int

4.5, -0.075 = float

True ou False = bool

Operadores Aritméticos

Adição +
Subtração -
Multiplicação *
Divisão /
Potência **
Divisão Inteira //  = 5//2 == 2
Resto da Divisão %  =  5 % 2 == 1

Algo Recebe Algo =
Igual = =

Ordem de Precedência:
1. ( )
2. **
3. *, /, //, %
4. +, -

Módulos
biblioteca doce = doce1, doce2, doce3, etc...

import doce 
Importa tudo

from doce import doce3, doce2
importa doce3 e doce 2 da biblioteca doces

Manipulando Texto

frase = 'Andre e alguem'

A = 0
n = 1
d = 2
r = 3
e = 4
 = 5
e = 6
 = 7
a = 8
l = 9
g = 10
u = 11
e = 12
m = 13


Fatiamento

frase[6] --> e
frase[6:13] --> e algue
frase[1:10:2] --> nr  l
frase[:5] --> Andre
frase[8:] --> alguem
frase[6::2] --> eage
frase[::2] --> Adeeage
frase[-1] --> 'm' --> Último item [-1]


Análise

len(frase) --> 14 caracteres
frase.count('e') --> 3
frase.count('e', {inicio} 0, {fim} 7) --> 2
frase.find('dre') --> inicio na posição 2
frase.find('nao') --> -1
'Andre' in frase --> True


Trasformação

frase.replace('alguem', 'Maisa') --> frase = 'Andre e Maisa' --> forma secundária, não afeta diretamente a string

frase.upper() --> frase = ANDRE E ALGUEM
frase.lower() --> frase = andre e alguem
frase.capitalize() --> primeiro caractere se torna maiúsculo
frase.title() --> Andre E Alguem

_ = espaço
frase = '___Andre Luiz__'
frase.strip() --> Andre Luiz
frase.rstrip() --> ___Andre Luiz
frase.lstrip() --> Andre Luiz__



Divisão

frase = 'Andre e alguem'

frase.split()* --> frase = ['Andre', 'e', 'alguem']
frase[0] [0] --> A

Junção

frase = [Andre, e, alguem]

'-'.join(frase)
frase = 'Andre-e-alguem'


print(" " " Olá
Mundo
!!!" " ") --> ele printa do jeito que está


Condições

Simples: 
if condição:
   bloco

Composta: 

if condição:
   bloco True
else:
   bloco False

or = ou (isso ou aquilo)
and = e (isso e aquilo)


Condição em 1 linha:
tempo = int(input('Quantos anos tem o seu carro?'))

print('carro novo' if tempo<=3 else 'carro velho)


print('-=-' * 10) 
-=--=--=--=--=--=--=--=--=--=-

from time import sleep 

print('PROCESSANDO...')
sleep(x) --> O computador "dorme" durante x segundos

from datetime import date
ano = date.today().year


Cores no Terminal

ANSI escape sequence

\033[style; text; background m
C:\Users\CASA\Desktop\CoresTerminalPython.jpeg

dicionário:
cores = {
	'limpa' : '\033[m',
	'azul' : '\033[34m',
	'invertido' : '\033[7;30m'
	}
print('Olá {}{}{}! É um prazer em te conhcer!'.format(cores['azul'], nome, cores['limpa']))




MUNDO 2


Estruturas Condicionais

if:
  
elif:

else: (Opsional)


print('André', end='')
print('Luiz')

AndréLuiz


Laço de Repetição

variavel de controle
for c in range(1, 10):  -->  laço c no intervalo (1, 10)

range(1, 3) --> 1, 2
range(1, 4) --> 1, 2, 3
range(3, 0, -1) --> 3, 2, 1
range(0, 10, 2) --> 0, 2, 4, 6, 8
range(0, 11, 2) --> 0, 2, 4, 6, 8, 10


teste lógico
while True:
	True

Quando True repita
senão saia do loop

Qual usar?
	Sei o limite == True:
		use FOR ou WHILE
	else:
		WHILE
n = 0
while True: --> NÃO FAZER ISSO SE NÃO TIVER UM 'BREAK' DENTRO DELE
    # Loop Infinito
    n = int(input('Digite um número: '))
    if n == 999:
        break --> Quebra o loop

FSTRING
nome = 'José'
idade = 33
salario = 1232.4
print(f 'O {nome} tem {idade} anos e ganha R${salario:.2f}')
print(f 'O {nome:-^20}')
:123
1 = Tipo de espaço 
2 = Centralização (< Esquerda, ^Centro, > Direita)
3 = Quantos espaços


Variáveis Compostas

Tuplas:
lanche = ('Hamburguer', 'Suco', 'Pizza', 'Pudim')

A partir do Python 3, os parenteses são Opcionais
"As Tuplas são IMUTÁVEIS"
Fatiamentos funcionam nas Tuplas

print(lanche)
Resultado = ('Hamburguer', 'Suco', 'Pizza', 'Pudim')

for comida in range(0, len(lanche)):
    print(lanche)

OU

for comida in lanche:
    print(comida)

Resultado =
Hamburguer
Suco
Pizza
Pudim


for comida in enumerate(lanche):
    print(comida)

Resultado =
(0, 'Hamburguer')
(1, 'Suco')
(2, 'Pizza')
(3, 'Pudim')


for posicao, comida in enumerate(lanche):
    print(f'Vou comer {comida} na posição {posicao}')
Resultado = 
Vou comer Hamburguer na posição 0
Vou comer Suco na posição 1
Vou comer Pizza na posição 2
Vou comer Pudim na posição 3

lanche = ('Hamburguer', 'Suco', 'Pizza', 'Pudim', 'Batata Frita', 'Refrigerante')
print(sorted(lanche))

Resultado = ['Batata Frita', 'Hamburguer', 'Pizza', 'Pudim', 'Refrigerante', 'Suco']


a = (2, 8, 4)
b = (5, 3, 2, 6)
c = a + b
print(c) --> (2, 8, 4, 5, 3, 2, 6)

c = b + a
print(c) --> (5, 3, 2, 6, 2, 8, 4)
len(c) --> 7
c.count(2) --> 2
c.count(8) --> 1
c.count(9) --> 0

c.index(3) --> posição: 1
c.index(2) --> posição: 2

del(c)
print(c)
ERRO -->  variavel *c* não foi definida
c.index(2 *item*, 3*a partir da posição*) --> posição: 4


Listas
Podem Mudar
lanche = ['Hamburguer', 'Suco', 'Pizza', 'Pudim']
lanche[3] = 'Picolé'
print(lanche) --> ['Hamburguer', 'Suco', 'Pizza', 'Picolé']

Criando elemtos nas listas
lanche.append('Refri')
lanche = ['Hamburguer', 'Suco', 'Pizza', 'Picolé', 'Refri']

lanche.insert(0, 'Hot-Dog')
lanche = ['Hot-Dog', 'Hamburguer', 'Suco', 'Pizza', 'Picolé', 'Refri']

del lanche[3]
lanche.pop(3)
lanche.remove('Pizza')
lanche = ['Hot-Dog', 'Hamburguer', 'Suco', 'Picolé', 'Refri']

lanche.pop()
lanche = ['Hot-Dog', 'Hamburguer', 'Suco', 'Picolé']

if 'Pizza' in lanche:
    lanche.remove('Pizza')

valores = list(range(4, 11))
valores = [4, 5, 6, 7, 8, 9, 10]

valores = [10, 9, 8, 6, 4, 1, 5]
valores.sort()
valores = [1, 4, 5, 6, 8, 9, 10]

valores.sort(reverse=True)
valores = [10, 9, 8, 6, 5, 4, 1]

Lista vazia:
num = []
num = list()

Ligações:
a = [2, 4, 5, 6, 0]
b = a
b[2] = 8
print(f'Lista A: {a}')
print(f'Lista B: {b}')

Resultado: 
Lista A: [2, 4, 8, 6, 0]
Lista B: [2, 4, 8, 6, 0]



Copiando Listas:
a = [2, 4, 5, 6, 0]
b = a[:]
b[2] = 8
print(f'Lista A: {a}')
print(f'Lista B: {b}')

Resultado: 
Lista A: [2, 4, 5, 6, 0]
Lista B: [2, 4, 8, 6, 0]

